<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>Maude Syntax; version 0.1
	The Regexp for a "Sort" is:
		/[^\s,.:\[\]\{\}](?:,\s*|\S)*/
	The Regexp for the "Terminator" is:
		/(?&lt;=[\s\]\)\}])(\.)/
	The Regexp to stop in front of the "Terminator":
		/(?&lt;=[\s\]\)\}])(?=\.)/
	The Regexp for a simple "Identifier" is:
		/(`.|[^`,\(\)\[\]\{\}])+/
	The support.*.prelude matches were extracted from:
		Maude interpreter standard prelude.
		Version alpha88d.
	</string>
	<key>fileTypes</key>
	<array>
		<string>maude</string>
		<string>obj</string>
	</array>
	<key>keyEquivalent</key>
	<string>^~M</string>
	<key>name</key>
	<string>Maude</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#toplevel</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#base</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>base</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.maude</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>constant.character.escape.maude</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(-?\d+(/\d+|(\.\d+)?([eE]-?\d+(\.\d+)?)?)?)\b</string>
					<key>name</key>
					<string>constant.numeric.maude</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(true|false|Bool)\b</string>
					<key>name</key>
					<string>constant.language.bool.maude</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(=/?=|\b(if|then|else|fi|and|or|xor|not|implies|and-then|or-else)\b)</string>
					<key>name</key>
					<string>keyword.operator.bool.maude</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b((ARRAY|MAP)\{\S+,\s*\S+\}|(LIST(\*|-AND-SET)?|SET\*?|SORTABLE-LIST(-AND-SET)?\'?|WEAKLY-SORTABLE-LIST\'?)\{\S+\}|Qid0|(Nat|Int|Rat|Float|String)(&lt;=?|0)|(BOOL|Bool|CONFIGURATION|CONVERSION|COUNTER|DEFAULT|EXT-BOOL|FLOAT|Float|INT|Int|LOOP-MODE|META-LEVEL|META-MODULE|META-TERM|NAT|NAT-LIST|Nat|QID|QID-LIST|QID-SET|Qid|RANDOM|RAT|Rat|STRICT-TOTAL-ORDER|STRICT-WEAK-ORDER|STRING|String|TOTAL-ORDER|TOTAL-PREORDER|TRIV|TRUTH|TRUTH-VALUE)\b)</string>
					<key>name</key>
					<string>support.type.module.prelude.maude</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\$Split\{\S+\}|\b((Array|Entry|Map)\{\S+,\s*\S+\}|(Element|Item|List|NeList|NeSet|PreList|PreSet|Set)\{\S+\}|(Type|Result(Pair|Triple|4Tuple)|MatchPair|Substitution|Trace)\?|(Assignment|Attr|AttrSet|Attribute|AttributeSet|Bool|Bound|Char|Cid|Condition|Configuration|Constant|Context|DecFloat|Elt|EmptyCommaList|EmptyTypeSet|EqCondition|Equation|EquationSet|FModule|FTheory|FindResult|FiniteFloat|Float|GTermList|GroundTerm|GroundTermList|Header|Hook|HookList|Import|ImportList|Int|Kind|KindSet|MatchPair|MembAx|MembAxSet|Module|ModuleExpression|Msg|Nat|NeCTermList|NeGroundTermList|NeHookList|NeKindSet|NeParameterDeclList|NeParameterList|NeSortSet|NeTermList|NeTypeList|NeTypeSet|NzInt|NzNat|NzRat|Object|Oid|OpDecl|OpDeclSet|ParameterDecl|ParameterDeclList|ParameterList|Portal|PosRat|PrintOption|PrintOptionSet|Qid|Rat|Renaming|RenamingSet|Result4Tuple|ResultPair|ResultTriple|Rule|RuleSet|SModule|STheory|Sort|SortSet|State|String|SubsortDecl|SubsortDeclSet|Substitution|System|Term|TermList|Trace|TraceStep|Type|TypeList|TypeListSet|TypeSet|Variable|Zero)\b))</string>
					<key>name</key>
					<string>support.type.sort.prelude.maude</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;(Floats|Qids|Strings)?&gt;|\$(augment|card|diff|filter|filterOut|hasMapping|intersect|makeList|makeSet|merge|reverse|size|sort|split)\b|&amp;|,|-|/\\?|2^|:[:=]?|;|&lt;[-&lt;=]?|=&gt;?|&gt;[=&gt;]?|\*|\+|\[\]|\\|\^|\{\}|\|(-&gt;)?|~|\b(abs|acos|ambiguity|anyType|append|ascii|asin|assoc|atan|ceiling|char|comm|completeName|config|cos|counter|ctor|decFloat|delete|downTerm|empty|exp|failure|filter|filterOut|find|flat|float|floor|format|format|frac|front|frozen|gather|gcd|getContext|getEqs|getImports|getKind|getKinds|getMbs|getName|getOps|getRls|getSorts|getSubsorts|getSubstitution|getTerm|getType|glbSorts|head|id|id-hook|idem|insert|intersection|iter|label|last|lcm|leastSort|left-id|length|lesserSorts|log|makeList|makeSet|max|maximalAritySet|maximalSorts|memo|merge|metaApply|metaFrewrite|metaMatch|metaNormalize|metaParse|metaPrettyPrint|metaReduce|metaRewrite|metaSearch|metaSearchPath|metaUnify|metaXapply|metaXmatch|metadata|min|minimalSorts|mixfix|modExp|msg|nil|noMatch|noParse|none|nonexec|notFound|number|object|occurs|op-hook|owise|pi|poly|prec|qid|random|rat|rat|reverse|rfind|right-id|sameKind|sd|sin|size|sort|sortLeq|special|sqrt|strat|string|substr|tail|tan|term-hook|trunc|unbounded|undefined|union|upEqs|upImports|upMbs|upModule|upOpDecls|upRls|upSorts|upSubsortDecls|upTerm|wellFormed|with-parens|divides|in|psubset|quo|rem|subset|xor|s)\b</string>
					<key>name</key>
					<string>support.function.operator.prelude.maude</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(f?(mod|th)|view|end(f?(m|th)|v)|from|to|is|inc(luding)?|ex(tending)?|pr(otecting)?|(sub)?sorts?|ops?|vars?|term|label|c?eq|c?mb|c?rl|if)\b</string>
					<key>name</key>
					<string>keyword.control.maude</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(:|=|:=|[-~=]&gt;)</string>
					<key>name</key>
					<string>keyword.operator.maude</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[,.:&lt;&gt;\(\)\[\]\{\}]</string>
					<key>name</key>
					<string>punctuation.other.maude</string>
				</dict>
			</array>
		</dict>
		<key>command</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.command.system.maude</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(in|load|q(uit)?|eof|popd|pwd|cd|pushd|ls)\b\s*(.*)$</string>
					<key>name</key>
					<string>meta.command.system.maude</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.command.select.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.type.module.maude</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.maude</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(select)\s+([^\{\s]+(?:\{.+\})?)\s+(\.)</string>
					<key>name</key>
					<string>meta.command.select.maude</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(parse|(?:(debug)\s+)?(red(uce)?|[ef]?rew(rite)?)|x?match|search|cont(inue)?|loop)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.command.rewrite.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.command.debug.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[\s\]\)\}])(\.)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.maude</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.command.rewrite.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\[</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.bounds.begin.maude</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\]</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.bounds.end.maude</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.command.bounds.maude</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#base</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>(?&lt;=\s)(&lt;=\?)(?=\s)</string>
							<key>name</key>
							<string>keyword.operator.match.maude</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?&lt;=\s)(=&gt;[1\+\*!])(?=\s)</string>
							<key>name</key>
							<string>keyword.operator.search.maude</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.command.in-module.maude</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>support.type.module.maude</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.in-module.maude</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b(in)\s+([^\{\s]+(?:\{.+\})?)\s+(:)</string>
							<key>name</key>
							<string>meta.command.in-module.maude</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(print)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.command.print.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[\s\]\)\}])(\.)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.maude</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.command.print.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\b(conceal|reveal)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.command.print.symbol.maude</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?&lt;=[\s\]\)\}])(?=\.)</string>
							<key>name</key>
							<string>meta.command.print.symbol.maude</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#base</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(trace)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.command.trace.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[\s\]\)\}])(\.)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.maude</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.command.trace.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\b(select|deselect)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.command.trace.symbol.maude</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?&lt;=[\s\]\)\}])(?=\.)</string>
							<key>name</key>
							<string>meta.command.trace.symbol.maude</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#base</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>\b(include|exclude)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.command.trace.module.maude</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?&lt;=[\s\]\)\}])(?=\.)</string>
							<key>name</key>
							<string>meta.command.trace.module.maude</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>([^\{\s]+(?:\{.+\})?)</string>
									<key>name</key>
									<string>support.type.module.maude</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.command.debug.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.command.debugger.maude</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.terminator.maude</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b(resume|abort|step|where)\b\s+(\.)</string>
							<key>name</key>
							<string>meta.command.debug.debugger.maude</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\b(break)\s+((de?)select)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.command.breakpoint.maude</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.other.command.breakpoint.maude</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?&lt;=[\s\]\)\}])(\.)</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.terminator.maude</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.command.debug.breakpoint.maude</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(show)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.command.show.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[\s\]\)\}])(\.)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.maude</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.command.show.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\b(search\s+graph|path(?:\s+labels?)?|modules?|all|sorts|ops|vars|mbs|eqs|rls|components|kinds|summary|views?|profile)\b</string>
							<key>name</key>
							<string>keyword.other.command.show.maude</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(set)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.command.set.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[\s\]\)\}])(\.)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.maude</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.command.set.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.command.set.show.maude</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.other.command.set.show-argument.maude</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b(show)\s+(advis(e|or(y|ies))|stats|timing|loop\s+(stats|timing)|breakdown|c(md|ommand)|gc)\b</string>
							<key>name</key>
							<string>meta.command.set.show.maude</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.command.set.print.maude</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.other.command.set.print-argument.maude</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b(print)\s+(mixfix|flat(tened)?|with\s+(paren(s|theses)?|alias(es)?)|conceal|number|rat|color|format|graph)\b</string>
							<key>name</key>
							<string>meta.command.set.print.maude</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.command.set.trace.maude</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.other.command.set.trace-argument.maude</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b(trace)(?:\s+(cond(ition)?|whole|subst(itution)?|select|mbs|eqs|rls|rew(rite)?|body))?\b</string>
							<key>name</key>
							<string>meta.command.set.trace.maude</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.command.set.clear.maude</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.other.command.set.clear-argument.maude</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b(clear)\s+(memo|r(l|ule)s?|profile)\b</string>
							<key>name</key>
							<string>meta.command.set.clear.maude</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.command.set.import.maude</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>support.type.module.maude</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b(include|extend|protect)\s+([^\{\s]+(?:\{.+\})?)</string>
							<key>name</key>
							<string>meta.command.set.import.maude</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.command.set.other.maude</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b(break|verbose|profile)\b</string>
							<key>name</key>
							<string>meta.command.set.other.maude</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.command.set.value.maude</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b(o(?:n|ff))\b</string>
							<key>name</key>
							<string>meta.command.set.value.maude</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=^|\s)\*{3}\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.maude</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.triple-star.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-content</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=^|\s)-{3}\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.maude</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.triple-dash.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-content</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(^[ \t]+)?(?=\*{3})</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\*{3}</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.maude</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\n</string>
							<key>name</key>
							<string>comment.line.triple-star.maude</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(^[ \t]+)?(?=-{3})</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>-{3}</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.maude</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\n</string>
							<key>name</key>
							<string>comment.line.triple-dash.maude</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comment-content</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-content</string>
				</dict>
			</array>
		</dict>
		<key>condition</key>
		<dict>
			<key>begin</key>
			<string>\b(if)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.condition.maude</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=\s)(?=\.|\[[^\]]*(\]\s+\.|$))</string>
			<key>name</key>
			<string>meta.condition.maude</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;=\s)/\\(?=\s)</string>
					<key>name</key>
					<string>keyword.operator.conjunction.maude</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\s)(:|=|:=)(?=\s)</string>
					<key>name</key>
					<string>keyword.operator.condition.maude</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#base</string>
				</dict>
			</array>
		</dict>
		<key>declaration</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#sort</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#subsort</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
			</array>
		</dict>
		<key>equation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(eq)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.equation.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[\s\]\)\}])(\.)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.maude</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.equation.eq.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;=\s)(=)(?=\s)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.equal.maude</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?&lt;=[\s\]\)\}])(?=\.)</string>
							<key>name</key>
							<string>meta.equation.eq.rhs.maude</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#statement-attributes</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#nested-brackets</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#module</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#base</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;=eq)</string>
							<key>end</key>
							<string>(?&lt;=\s)(?==\s)</string>
							<key>name</key>
							<string>meta.equation.eq.lhs.maude</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#nested-brackets</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#base</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(ceq)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.equation.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[\s\]\)\}])(\.)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.maude</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.equation.ceq.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;=\s)(=)(?=\s)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.equal.maude</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?&lt;=[\s\]\)\}])(?=\.)</string>
							<key>name</key>
							<string>meta.equation.ceq.rhs.maude</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#condition</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#statement-attributes</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#nested-brackets</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#module</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#base</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;=ceq)</string>
							<key>end</key>
							<string>(?&lt;=\s)(?==\s)</string>
							<key>name</key>
							<string>meta.equation.ceq.lhs.maude</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#nested-brackets</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#base</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>import</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.import.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.type.module.maude</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.maude</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(inc(?:luding)?|ex(?:tending)?|pr(?:otecting)?)\s+([^\{\s]+(?:\{.+\})?)\s+(\.)</string>
					<key>name</key>
					<string>meta.import.module.maude</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(inc(?:luding)?|ex(?:tending)?|pr(?:otecting)?)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.import.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[\s\]\)\}])(\.)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.maude</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.import.module-expression.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;=\s)\+(?=\s)</string>
							<key>name</key>
							<string>keyword.operator.module-sum.maude</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;=\s)(\*)(?=\s)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.module-rename.maude</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?&lt;=\))(?=[\s\]\)\}])</string>
							<key>name</key>
							<string>meta.module.rename.maude</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>(?&lt;=\s)(\()</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.renaming.begin.maude</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(\))(?=[\s\]\)\}])</string>
									<key>endCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.renaming.end.maude</string>
										</dict>
									</dict>
									<key>name</key>
									<string>meta.module.rename.renaming.maude</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#nested-brackets</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#renaming</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>\b[^\{\s]+(?:\{.+\})?\b</string>
							<key>name</key>
							<string>support.type.module.maude</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>mapping</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.mapping.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.type.sort.maude</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.mapping.maude</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>support.type.sort.maude</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.maude</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(sort)\s+([A-Z]\S*)\s+(to)\s+([A-Z]\S*)\s+(\.)</string>
					<key>name</key>
					<string>meta.mapping.sort.maude</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.mapping.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.statement.maude</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.mapping.maude</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>support.function.statement.maude</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.maude</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(label)\s+(\S+)\s+(to)\s+(\S+)\s+(\.)</string>
					<key>name</key>
					<string>meta.mapping.label.maude</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.mapping.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.operator.maude</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.mapping.maude</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>support.function.operator.maude</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.maude</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(op)\s+((?:`.|[^`,\(\)\[\]\{\}])+)\s+(to)\s+((?:`.|[^`,\(\)\[\]\{\}])+)\s+(\.)</string>
					<key>name</key>
					<string>meta.mapping.operator.maude</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.mapping.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.operator.maude</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.mapping.maude</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.control.mapping.maude</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>support.function.operator.maude</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.maude</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(op)\s+((?:`.|[^`,\(\)\[\]\{\}])+)\s+(to)\s+(term)\s+(.+)\s+(\.)</string>
					<key>name</key>
					<string>meta.mapping.operator.maude</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.mapping.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.operator.maude</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.op-range.maude</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>support.type.sort.maude</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.op-domain.maude</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>support.type.sort.maude</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>keyword.control.mapping.maude</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>support.function.operator.maude</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.maude</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(op)\s+((?:`.|[^`,\(\)\[\]\{\}])+)\s+(:)\s+(.*)\s+([-~]&gt;)\s+(\S+)\s+(to)\s+((?:`.|[^`,\(\)\[\]\{\}])+)\s+(\.)</string>
					<key>name</key>
					<string>meta.mapping.operator.maude</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#base</string>
				</dict>
			</array>
		</dict>
		<key>membership</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(mb)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.membership.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[\s\]\)\}])(\.)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.maude</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.membership.mb.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;=\s)(:)(?=\s)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.member.maude</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?&lt;=[\s\]\)\}])(?=\.)</string>
							<key>name</key>
							<string>meta.membership.mb.rhs.maude</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#statement-attributes</string>
								</dict>
								<dict>
									<key>match</key>
									<string>[^\s,.:\[\]\{\}](?:,\s*|\S)*</string>
									<key>name</key>
									<string>support.type.sort.maude</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#nested-brackets</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#base</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;=mb)</string>
							<key>end</key>
							<string>(?&lt;=\s)(?=:\s)</string>
							<key>name</key>
							<string>meta.membership.mb.lhs.maude</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#nested-brackets</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#base</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(cmb)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.membership.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[\s\]\)\}])(\.)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.maude</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.membership.cmb.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;=\s)(:)(?=\s)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.member.maude</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?&lt;=[\s\]\)\}])(?=\.)</string>
							<key>name</key>
							<string>meta.membership.cmb.rhs.maude</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#condition</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#statement-attributes</string>
								</dict>
								<dict>
									<key>match</key>
									<string>[^\s,.:\[\]\{\}](?:,\s*|\S)*</string>
									<key>name</key>
									<string>support.type.sort.maude</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#nested-brackets</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#base</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;=cmb)</string>
							<key>end</key>
							<string>(?&lt;=\s)(?=:\s)</string>
							<key>name</key>
							<string>meta.membership.cmb.lhs.maude</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#nested-brackets</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#base</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>module</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(fmod)\s+([^\{\s]+(?:\{.+\})?)\s+(is)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.module.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.module.maude</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.module.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\b(endfm)\b</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.module.maude</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.module.fmod.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#import</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#statement</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(mod)\s+([^\{\s]+(?:\{.+\})?)\s+(is)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.module.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.module.maude</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.module.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\b(endm)\b</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.module.maude</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.module.mod.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#import</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#statement</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#rule</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(fth)\s+([^\{\s]+)\s+(is)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.module.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.module.maude</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.module.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\b(endfth)\b</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.module.maude</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.module.fth.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#import</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#statement</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(th)\s+([^\{\s]+)\s+(is)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.module.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.module.maude</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.module.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\b(endth)\b</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.module.maude</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.module.th.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#import</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#statement</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#rule</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(view)\s+([^\{\s]+(?:\{.+\})?)\s+(from)\s+([^\{\s]+(?:\{.+\})?)\s+(to)\s+([^\{\s]+(?:\{.+\})?)\s+(is)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.module.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.module.maude</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.module.maude</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>support.type.module.maude</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>keyword.control.module.maude</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>support.type.module.maude</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>keyword.control.module.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\b(endv)\b</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.module.maude</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.view.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#mapping</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>nested-brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=[^`])\[</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.brackets.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#nested-brackets</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=[^`])\(</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#nested-brackets</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>operator</key>
		<dict>
			<key>begin</key>
			<string>\b(ops?)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.operator.maude</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=[\s\]\)\}])(\.)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.maude</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.definition.operator.maude</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\s)(:)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.op-range.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\s[-~]&gt;\s)</string>
					<key>name</key>
					<string>meta.definition.operator.range.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>[^\s,.:\[\]\{\}](?:,\s*|\S)*</string>
							<key>name</key>
							<string>support.type.sort.maude</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\s)([-~]&gt;)\s+(?:([^\s,.:\[\]\{\}](?:,\s*|\S)*)|(\[[^\]]+\]))(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.op-domain.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.type.sort.maude</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.type.kind.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[\s\]\)\}])(?=\.)</string>
					<key>name</key>
					<string>meta.definition.operator.domain.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#operator-attributes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.operator.begin.maude</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>entity.name.function.operator.maude</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.operator.end.maude</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#nested-brackets</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\S+</string>
					<key>name</key>
					<string>entity.name.function.operator.maude</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#base</string>
				</dict>
			</array>
		</dict>
		<key>operator-attributes</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\s)(\[)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.attributes.begin.maude</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.attributes.end.maude</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.definition.attributes.operator.maude</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b((id|op|term)-hook)\b</string>
					<key>name</key>
					<string>keyword.other.special-hook.maude</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
					\b
					((assoc(iative)?
					 |c(o(mm(utative)?
					     |n(fig(uration)?
					       |structor))
					   |tor)
					 |ditto
					 |f(ormat
					   |rozen)
					 |gather
					 |i(dem(potent)?
					   |ter(ated)?)
					 |l(abel
					   |eft)
					 |m(e(mo
					     |ssage
					     |tadata)
					   |sg)
					 |nonexec
					 |o(bj(ect)?
					   |(ther)?wise)
					 |p(oly(morphic)?
					   |rec(edence)?)
					 |right
					 |s(pecial
					   |trat(egy)?)
					 )\b
					|id(entity)?:)
					</string>
					<key>name</key>
					<string>keyword.other.attribute.maude</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#nested-brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#base</string>
				</dict>
			</array>
		</dict>
		<key>renaming</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>,(?=\s)</string>
					<key>name</key>
					<string>punctuation.separator.renaming.maude</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.renaming.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.type.sort.maude</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.renaming.maude</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>support.type.sort.maude</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(sort)\s+([A-Z]\S*)\s+(to)\s+([A-Z]\S*)\s*(?=[,\)])</string>
					<key>name</key>
					<string>meta.renaming.sort.maude</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.renaming.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.statement.maude</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.renaming.maude</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>support.function.statement.maude</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(label)\s+(\S+)\s+(to)\s+(\S+)\s*(?=[,\)])</string>
					<key>name</key>
					<string>meta.renaming.label.maude</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(op)\s+((?:`.|[^`,\(\)\[\]\{\}])+)\s+(to)\s+((?:`.|[^`,\(\)\[\]\{\}])+)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.renaming.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.operator.maude</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.renaming.maude</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>support.function.operator.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[,\)])</string>
					<key>name</key>
					<string>meta.renaming.operator.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#renaming-attributes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(op)\s+((?:`.|[^`,\(\)\[\]\{\}])+)\s+(:)\s+(.*)\s+([-~]&gt;)\s+(\S+)\s+(to)\s+((?:`.|[^`,\(\)\[\]\{\}])+)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.renaming.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.operator.maude</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.op-range.maude</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>support.type.sort.maude</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.op-domain.maude</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>support.type.sort.maude</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>keyword.control.renaming.maude</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>support.function.operator.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[,\)])</string>
					<key>name</key>
					<string>meta.renaming.operator.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#renaming-attributes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#base</string>
				</dict>
			</array>
		</dict>
		<key>renaming-attributes</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\s)(\[)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.attributes.begin.maude</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.attributes.end.maude</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.renaming.operator.attributes.maude</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(prec|gather|format)\b</string>
					<key>name</key>
					<string>keyword.other.attribute.maude</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#nested-brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#base</string>
				</dict>
			</array>
		</dict>
		<key>rule</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(rl)\b(?:\s+\[\s*([^\]]+)\s*\]\s*(:)(?=\s))?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.rule.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.rule.maude</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.rule-name.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[\s\]\)\}])(\.)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.maude</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.rule.rl.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;=\s)(=&gt;)(?=\s)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.rewrite.maude</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?&lt;=[\s\]\)\}])(?=\.)</string>
							<key>name</key>
							<string>meta.rule.rl.rhs.maude</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#statement-attributes</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#base</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>[^\s\(\[]+(\([^\)]+\)|\[[^\]]+\])?</string>
							<key>name</key>
							<string>meta.rule.rl.lhs.maude</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(crl)\b(?:\s+\[\s*([^\]]+)\s*\]\s*(:)(?=\s))?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.rule.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.rule.maude</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.rule-name.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[\s\]\)\}])(\.)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.maude</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.rule.crl.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;=\s)(=&gt;)(?=\s)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.rewrite.maude</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?&lt;=[\s\]\)\}])(?=\.)</string>
							<key>name</key>
							<string>meta.rule.crl.rhs.maude</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#condition</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#statement-attributes</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#base</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>[^\s\(\[]+(\([^\)]+\)|\[[^\]]+\])?</string>
							<key>name</key>
							<string>meta.rule.crl.lhs.maude</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>sort</key>
		<dict>
			<key>begin</key>
			<string>\b(sorts?)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.sort.maude</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=[\s\]\)\}])(\.)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.maude</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.definition.sort.maude</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[^\s,.:\[\]\{\}](?:,\s*|\S)*</string>
					<key>name</key>
					<string>entity.name.type.sort.maude</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#base</string>
				</dict>
			</array>
		</dict>
		<key>statement</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#equation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#membership</string>
				</dict>
			</array>
		</dict>
		<key>statement-attributes</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\s)(\[)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.attributes.begin.maude</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.attributes.end.maude</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.definition.attributes.statement.maude</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(nonexec|o(ther)?wise|metadata)\b</string>
					<key>name</key>
					<string>keyword.other.attribute.maude</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.attribute.maude</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.statement.maude</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(label)\s+(\S+)\b</string>
					<key>name</key>
					<string>meta.definition.attributes.statement.label.maude</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#nested-brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#base</string>
				</dict>
			</array>
		</dict>
		<key>subsort</key>
		<dict>
			<key>begin</key>
			<string>\b(subsorts?)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.subsort.maude</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=[\s\]\)\}])(\.)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.maude</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.definition.subsort.maude</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;=\s)&lt;(?=\s)</string>
					<key>name</key>
					<string>keyword.operator.subsort.maude</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[^\s,.:\[\]\{\}](?:,\s*|\S)*</string>
					<key>name</key>
					<string>support.type.sort.maude</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#base</string>
				</dict>
			</array>
		</dict>
		<key>toplevel</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=[^`])\(</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.maude</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Parens are allowed at the top level.</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#toplevel</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#module</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#command</string>
				</dict>
			</array>
		</dict>
		<key>variable</key>
		<dict>
			<key>begin</key>
			<string>\b(vars?)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.variable.maude</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=[\s\]\)\}])(\.)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.maude</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.type.sort.maude</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.type.kind.maude</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.definition.variable.maude</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\s)(:)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.member.maude</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[\s\]\)\}])(?=\.)</string>
					<key>name</key>
					<string>meta.definition.variable.sort.maude</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>[^\s,.:\[\]\{\}](?:,\s*|\S)*</string>
							<key>name</key>
							<string>support.type.sort.maude</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\[[^\]]+\]</string>
							<key>name</key>
							<string>support.type.kind.maude</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\S+</string>
					<key>name</key>
					<string>variable.other.var.maude</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#base</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.maude</string>
	<key>uuid</key>
	<string>35828219-9EDE-44B0-A1EB-A277858E3534</string>
</dict>
</plist>
